import java.util.TreeSet;								//Importamos la libreria de treeset

public class DesarolladoresTreeSet {							
    TreeSet<String> desarrolladoresWeb, desarrolladoresJava, desarrolladoresCelular;	//Se crean tres objetos de tipo treeset. Cada uno representa un conjunto de desarrolladores de cierto tipo (web, java o celular)

	public DesarolladoresTreeSet(){ 						//crea cada conjunto, que va a tener objetos tipo string (el nombre del desarrollador)
		 desarrolladoresWeb = new TreeSet<String>();
		 desarrolladoresJava = new TreeSet<String>();
		 desarrolladoresCelular = new TreeSet<String>();
	}

	public void agregar(String nombre, boolean esWeb, boolean esJava, boolean esCelular){ //se agrega el nombre a la lista segun el conjunto que pertenece.
		for (int i = 0; i<3; i++){ 							//hace un for para asegurarse que entre a cada if en caso que pertenezca a todos los conjuntos
			if ((esWeb) && (i==0)){
				desarrolladoresWeb.add(nombre);
			}
			if ((esJava) && (i==1)){
				desarrolladoresJava.add(nombre);
			}
			if ((esCelular) && (i==2)){
				desarrolladoresCelular.add(nombre);
			}
		}
	}

	public boolean compararTresConjuntos (String nombre){
		boolean estaEnWeb = desarrolladoresWeb.contains(nombre); 		//revisa dentro de cada conjunto si existe ese nombre
		boolean estaEnJava = desarrolladoresJava.contains(nombre);
		boolean estaEnCelular = desarrolladoresCelular.contains(nombre);

		return (estaEnWeb)&&(estaEnJava)&&(estaEnCelular); 			//regresa la union de los tres; si no es parte de uno, es fail
	}

	public boolean compararJavaSinWeb (String nombre){ 				
		boolean estaEnWeb = desarrolladoresWeb.contains(nombre);
		boolean estaEnJava = desarrolladoresJava.contains(nombre);

		return (estaEnJava)&&(!estaEnWeb); 					//solo es verdadero cuando existe en el conjunto de java pero no en web. Si esta o no en celular, es irrelevante
	}

	public boolean compararWebYCelSinJava (String nombre){
		boolean estaEnWeb = desarrolladoresWeb.contains(nombre);
		boolean estaEnJava = desarrolladoresJava.contains(nombre);
		boolean estaEnCelular = desarrolladoresCelular.contains(nombre);

		return (estaEnCelular)&&(estaEnWeb)&&(!estaEnJava);    			//debe estar en celular y en la web y NO en java
	}
	
	public boolean compararWebOCelSinJava (String nombre){
		boolean estaEnWeb = desarrolladoresWeb.contains(nombre);
		boolean estaEnJava = desarrolladoresJava.contains(nombre);
		boolean estaEnCelular = desarrolladoresCelular.contains(nombre);

		return (estaEnCelular)||(estaEnWeb)&&(!estaEnJava);
	}

	public boolean javaEsSubconjuntoDeWeb (){
		int contador =0;
		int tamano = desarrolladoresJava.size();
		TreeSet<String> temporal = desarrolladoresJava;
		while (contador<tamano){
			boolean loContiene = desarrolladoresWeb.contains(temporal.pollLast());
			if (!loContiene){
				return false;
			}
			contador ++;
		}
		return true;
	}


	public int conjuntoMayor (String nombre){
		int tamanoJava = desarrolladoresJava.size();
		int tamanoWeb = desarrolladoresWeb.size();
		int tamanoCelular = desarrolladoresCelular.size();
		if ((tamanoWeb<tamanoJava)&&(tamanoCelular<tamanoJava)){
			return 0;
		}
		if ((tamanoJava<tamanoWeb)&&(tamanoCelular<tamanoWeb)){
			return 1;
		}
		if ((tamanoJava<tamanoCelular)&&(tamanoWeb<tamanoCelular)){
			return 2;
		}
	}
}
